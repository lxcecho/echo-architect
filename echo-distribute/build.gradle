plugins {
    id 'java'
    id 'org.springframework.boot' version '2.6.7'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

group 'com.xc.joy'
version '1.0-SNAPSHOT'
sourceCompatibility = '17'
description "分布式"

configurations {
    mybatisGenerator
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.2'

    runtimeOnly 'mysql:mysql-connector-java'
    implementation group: 'org.apache.zookeeper', name: 'zookeeper', version: '3.8.0'
    implementation group: 'org.apache.curator', name: 'curator-recipes', version: '5.2.1'

    /*Java API 方式*/
//    implementation group: 'org.redisson', name: 'redisson', version: '3.17.1'

    /*spring boot starter 方式*/
    implementation group: 'org.redisson', name: 'redisson-spring-boot-starter', version: '3.17.1'

    // mybatis-generator
    mybatisGenerator 'org.mybatis.generator:mybatis-generator-core:1.4.0'
    mybatisGenerator 'mysql:mysql-connector-java:8.0.28'
    mybatisGenerator 'tk.mybatis:mapper:4.1.5'

    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.13'
    implementation group: 'org.apache.rocketmq', name: 'rocketmq-client', version: '5.0.0-PREVIEW'

    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.17.1'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    testImplementation group: 'junit', name: 'junit', version: '4.13.1'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '4.5.1'

    implementation group: 'net.bytebuddy', name: 'byte-buddy', version: '1.12.10'
}


// https://developer.aliyun.com/article/606215
def getDbProperties = {
    def getDbProperties = {
        def properties = new Properties()
        file("src/main/resources/mybatis/config.properties").withInputStream { inputStream ->
            properties.load(inputStream)
        }
        properties
    }
}

//task mybatisGenerate << {
//    def properties = getDbProperties()
//    ant.properties['targetProject'] = projectDir.path
//    ant.properties['driverClass'] = properties.getProperty("jdbc.driverClassName")
//    ant.properties['connectionURL'] = properties.getProperty("jdbc.url")
//    ant.properties['userId'] = properties.getProperty("jdbc.username")
//    ant.properties['password'] = properties.getProperty("jdbc.password")
//    ant.properties['src_main_java'] = sourceSets.main.java.srcDirs[0].path
//    ant.properties['src_main_resources'] = sourceSets.main.resources.srcDirs[0].path
//    ant.properties['modelPackage'] = properties.getProperty("package.model")
//    ant.properties['mapperPackage'] = properties.getProperty("package.mapper")
//    ant.properties['sqlMapperPackage'] = properties.getProperty("package.xml")
//    ant.taskdef(
//            name: 'mbgenerator',
//            classname: 'org.mybatis.generator.ant.GeneratorAntTask',
//            classpath: configurations.mybatisGenerator.asPath
//    )
//    ant.mbgenerator(overwrite: true,
//            configfile: 'src/main/resources/mybatis/generatorConfig.xml', verbose: true) {
//        propertyset {
//            propertyref(name: 'targetProject')
//            propertyref(name: 'userId')
//            propertyref(name: 'driverClass')
//            propertyref(name: 'connectionURL')
//            propertyref(name: 'password')
//            propertyref(name: 'src_main_java')
//            propertyref(name: 'src_main_resources')
//            propertyref(name: 'modelPackage')
//            propertyref(name: 'mapperPackage')
//            propertyref(name: 'sqlMapperPackage')
//        }
//    }
//}